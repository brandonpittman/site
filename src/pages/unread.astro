---
import { getCollection } from "astro:content";

import Layout from "@layouts/Layout.astro";
import SearchForm from "@components/FinishedSearchForm.astro";
import UnreadBlock from "@components/UnreadBlock.astro";

import "core-js/proposals/array-grouping-v2";

let books = await getCollection("books");

let authors = [...new Set(books.map((b) => b.data.author))].sort();

let isRead = (b) => b.data.status === "read";
let read = books.filter(isRead);

let isReading = (b) => b.data.status === "reading";
let reading = books.filter(isReading);

let isUnread = (b) => b.data.status === "unread";
let unread = books.filter(isUnread);

let isAbandoned = (b) => b.data.status === "abandoned";
let abandoned = books.filter(isAbandoned);

let url = new URL(Astro.url);
let searchParams = url.searchParams;
let q = searchParams.get("q")?.trim();

if (q === "") {
  return Astro.redirect("/unread");
}

if (q) {
  let regex = new RegExp(q, "i");
  let filterFn = (v) =>
    v.data.title.match(regex) ||
    v.data?.genre?.match(regex) ||
    v.data?.author?.match(regex);
  unread = unread.filter(filterFn);
  read = read.filter(filterFn);
  reading = reading.filter(filterFn);
  abandoned = abandoned.filter(filterFn);
}
---

<Layout title="Unread - Brandon Pittman">
  <main class="region wrapper prose flow w-full">
    <h1 class="visually-hidden">Books</h1>

    <SearchForm placeholder="Search by title or authorâ€¦">Title</SearchForm>

    <section id="lists" class="flow">
      <UnreadBlock list={reading} title="Reading" />
      <UnreadBlock list={unread} title="Unread" />
      <UnreadBlock list={read} title="Read" />
      <UnreadBlock list={abandoned} title="Abandoned" />
    </section>
  </main>
</Layout>
